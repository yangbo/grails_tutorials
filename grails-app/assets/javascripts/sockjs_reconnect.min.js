/*knowitnothing, MIT 2013. https://github.com/knowitnothing/sockjs_reconnect*/(function(){var d,c=function(a,e){return function(){return a.apply(e,arguments)}};d=function(){function a(a,b,d,f,g,h){this.cli_path=a;this.status_cb=d;this.cli_onmessage=f;this.cli_onopen=g;this.cli_onclose=h;this.on_close=c(this.on_close,this);this.on_open=c(this.on_open,this);this.send=c(this.send,this);this.reconnect_try=c(this.reconnect_try,this);this.reconnect_reset=c(this.reconnect_reset,this);this.connect=c(this.connect,this);this.update_status=c(this.update_status,this);$.extend(this.reconnect,
b)}a.prototype.reconnect={reconnecting:!1,do_not_reconnect:!1,reload_after_n:!0,max_retries:30,reset_mult:6,retry_timeout_ms:1500+Math.floor(60*Math.random()),retry_multiplier:2,retry_curr_multiplier:0,retry_curr_timeout:0,retry_count:0};a.prototype.conn=null;a.prototype.update_status=function(){if(this.reconnect.reconnecting){if(null!=this.status_cb)return this.status_cb("reconnecting")}else if(null===this.conn||this.conn.readyState!==SockJS.OPEN){if(null!=this.status_cb)return this.status_cb("disconnected")}else if(null!=
this.status_cb)return this.status_cb("connected")};a.prototype.connect=function(){null!=this.conn&&(this.conn.close(),this.conn=null);this.conn=new SockJS(this.cli_path);null!=this.status_cb&&this.status_cb("connecting");this.conn.onopen=this.on_open;this.conn.onclose=this.on_close;return this.conn.onmessage=this.cli_onmessage};a.prototype.reconnect_reset=function(){this.reconnect.reconnecting=!1;this.reconnect.retry_curr_timeout=0;this.reconnect.retry_curr_multipler=0;return this.reconnect.retry_count=
0};a.prototype.reconnect_try=function(a){var b=this;if(this.reconnect.retry_count===this.reconnect.max_retries)this.reconnect.reconnecting=!1,this.reconnect.reload_after_n&&window.location.reload(!0);else{if(this.reconnect.reconnecting)return this.reconnect.retry_count+=1,setTimeout(function(){b.reconnect.retry_curr_timeout*=b.reconnect.retry_multiplier;b.reconnect.retry_curr_multipler+=1;b.reconnect.retry_curr_multipler===b.reconnect.reset_mult&&(b.reconnect.retry_curr_timeout=b.reconnect.retry_timeout_ms,
b.reconnect.retry_curr_multipler=1);return a()},this.reconnect.retry_curr_timeout);this.reconnect.reconnecting=!0;this.reconnect.retry_curr_timeout=this.reconnect.retry_timeout_ms;this.reconnect.retry_curr_multipler=1;this.reconnect.retry_count=1;return a()}};a.prototype.send=function(a){return this.conn.send(a)};a.prototype.on_open=function(){this.reconnect_reset();this.update_status();if(null!=this.cli_onopen)return this.cli_onopen()};a.prototype.on_close=function(){this.conn=null;this.update_status();
null!=this.cli_onclose&&this.cli_onclose();if(!this.reconnect.do_not_reconnect)return this.reconnect_try(this.connect)};return a}();("undefined"!==typeof exports&&null!==exports?exports:this).SockReconnect=d}).call(this);
